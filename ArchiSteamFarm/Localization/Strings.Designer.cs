//------------------------------------------------------------------------------
// <auto-generated>
//     Ten kod został wygenerowany przez narzędzie.
//     Wersja wykonawcza:4.0.30319.42000
//
//     Zmiany w tym pliku mogą spowodować nieprawidłowe zachowanie i zostaną utracone, jeśli
//     kod zostanie ponownie wygenerowany.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ArchiSteamFarm.Localization {
    using System;
    
    
    /// <summary>
    ///   Klasa zasobu wymagająca zdefiniowania typu do wyszukiwania zlokalizowanych ciągów itd.
    /// </summary>
    // Ta klasa została automatycznie wygenerowana za pomocą klasy StronglyTypedResourceBuilder
    // przez narzędzie, takie jak ResGen lub Visual Studio.
    // Aby dodać lub usunąć składową, edytuj plik ResX, a następnie ponownie uruchom narzędzie ResGen
    // z opcją /str lub ponownie utwórz projekt VS.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "16.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    public class Strings {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Strings() {
        }
        
        /// <summary>
        /// Zwraca buforowane wystąpienie ResourceManager używane przez tę klasę.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ArchiSteamFarm.Localization.Strings", typeof(Strings).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Przesłania właściwość CurrentUICulture bieżącego wątku dla wszystkich
        ///   przypadków przeszukiwania zasobów za pomocą tej klasy zasobów wymagającej zdefiniowania typu.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        public static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Accepting trade: {0}.
        /// </summary>
        public static string AcceptingTrade {
            get {
                return ResourceManager.GetString("AcceptingTrade", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Matching Steam items, round #{0}....
        /// </summary>
        public static string ActivelyMatchingItems {
            get {
                return ResourceManager.GetString("ActivelyMatchingItems", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Matched a total of {0} sets this round..
        /// </summary>
        public static string ActivelyMatchingItemsRound {
            get {
                return ResourceManager.GetString("ActivelyMatchingItemsRound", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu ASF will automatically check for new versions every {0}..
        /// </summary>
        public static string AutoUpdateCheckInfo {
            get {
                return ResourceManager.GetString("AutoUpdateCheckInfo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Accepted donation trade: {0}.
        /// </summary>
        public static string BotAcceptedDonationTrade {
            get {
                return ResourceManager.GetString("BotAcceptedDonationTrade", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Accepting gift: {0}....
        /// </summary>
        public static string BotAcceptingGift {
            get {
                return ResourceManager.GetString("BotAcceptingGift", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Account is no longer occupied: idling process resumed!.
        /// </summary>
        public static string BotAccountFree {
            get {
                return ResourceManager.GetString("BotAccountFree", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu This account is limited, idling process is unavailable until the restriction is removed!.
        /// </summary>
        public static string BotAccountLimited {
            get {
                return ResourceManager.GetString("BotAccountLimited", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu This account is locked, idling process is permanently unavailable!.
        /// </summary>
        public static string BotAccountLocked {
            get {
                return ResourceManager.GetString("BotAccountLocked", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Account is currently being used: ASF will resume idling when it&apos;s free....
        /// </summary>
        public static string BotAccountOccupied {
            get {
                return ResourceManager.GetString("BotAccountOccupied", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu ID: {0} | Status: {1}.
        /// </summary>
        public static string BotAddLicense {
            get {
                return ResourceManager.GetString("BotAddLicense", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu ID: {0} | Status: {1} | Items: {2}.
        /// </summary>
        public static string BotAddLicenseWithItems {
            get {
                return ResourceManager.GetString("BotAddLicenseWithItems", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu This bot is already running!.
        /// </summary>
        public static string BotAlreadyRunning {
            get {
                return ResourceManager.GetString("BotAlreadyRunning", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu This bot has already stopped!.
        /// </summary>
        public static string BotAlreadyStopped {
            get {
                return ResourceManager.GetString("BotAlreadyStopped", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Converting .maFile into ASF format....
        /// </summary>
        public static string BotAuthenticatorConverting {
            get {
                return ResourceManager.GetString("BotAuthenticatorConverting", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Successfully finished importing mobile authenticator!.
        /// </summary>
        public static string BotAuthenticatorImportFinished {
            get {
                return ResourceManager.GetString("BotAuthenticatorImportFinished", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu 2FA Token: {0}.
        /// </summary>
        public static string BotAuthenticatorToken {
            get {
                return ResourceManager.GetString("BotAuthenticatorToken", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Automatic idling has paused!.
        /// </summary>
        public static string BotAutomaticIdlingNowPaused {
            get {
                return ResourceManager.GetString("BotAutomaticIdlingNowPaused", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Automatic idling has resumed!.
        /// </summary>
        public static string BotAutomaticIdlingNowResumed {
            get {
                return ResourceManager.GetString("BotAutomaticIdlingNowResumed", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Automatic idling is paused already!.
        /// </summary>
        public static string BotAutomaticIdlingPausedAlready {
            get {
                return ResourceManager.GetString("BotAutomaticIdlingPausedAlready", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Automatic idling is resumed already!.
        /// </summary>
        public static string BotAutomaticIdlingResumedAlready {
            get {
                return ResourceManager.GetString("BotAutomaticIdlingResumedAlready", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Connected to Steam!.
        /// </summary>
        public static string BotConnected {
            get {
                return ResourceManager.GetString("BotConnected", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Connecting....
        /// </summary>
        public static string BotConnecting {
            get {
                return ResourceManager.GetString("BotConnecting", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Connection to Steam Network lost. Reconnecting....
        /// </summary>
        public static string BotConnectionLost {
            get {
                return ResourceManager.GetString("BotConnectionLost", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Disconnected from Steam!.
        /// </summary>
        public static string BotDisconnected {
            get {
                return ResourceManager.GetString("BotDisconnected", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Disconnecting....
        /// </summary>
        public static string BotDisconnecting {
            get {
                return ResourceManager.GetString("BotDisconnecting", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu [{0}] password: {1}.
        /// </summary>
        public static string BotEncryptedPassword {
            get {
                return ResourceManager.GetString("BotEncryptedPassword", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Waiting up to {0} to ensure that we&apos;re free to start idling....
        /// </summary>
        public static string BotExtraIdlingCooldown {
            get {
                return ResourceManager.GetString("BotExtraIdlingCooldown", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Bot has {0} games remaining in its background queue..
        /// </summary>
        public static string BotGamesToRedeemInBackgroundCount {
            get {
                return ResourceManager.GetString("BotGamesToRedeemInBackgroundCount", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Generating Steam parental code, this can take a while, consider putting it in the config instead....
        /// </summary>
        public static string BotGeneratingSteamParentalCode {
            get {
                return ResourceManager.GetString("BotGeneratingSteamParentalCode", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Successfully handled {0} confirmations!.
        /// </summary>
        public static string BotHandledConfirmations {
            get {
                return ResourceManager.GetString("BotHandledConfirmations", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Bot has no wallet..
        /// </summary>
        public static string BotHasNoWallet {
            get {
                return ResourceManager.GetString("BotHasNoWallet", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Failed to disconnect the client. Abandoning this bot instance!.
        /// </summary>
        public static string BotHeartBeatFailed {
            get {
                return ResourceManager.GetString("BotHeartBeatFailed", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Not starting this bot instance because it&apos;s disabled in config file!.
        /// </summary>
        public static string BotInstanceNotStartingBecauseDisabled {
            get {
                return ResourceManager.GetString("BotInstanceNotStartingBecauseDisabled", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Received TwoFactorCodeMismatch error code {0} times in a row. Either your 2FA credentials are no longer valid, or your clock is out of sync, aborting!.
        /// </summary>
        public static string BotInvalidAuthenticatorDuringLogin {
            get {
                return ResourceManager.GetString("BotInvalidAuthenticatorDuringLogin", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Received InvalidPassword error code {0} times in a row. Your password for this account is most likely wrong, aborting!.
        /// </summary>
        public static string BotInvalidPasswordDuringLogin {
            get {
                return ResourceManager.GetString("BotInvalidPasswordDuringLogin", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Bot has level {0}..
        /// </summary>
        public static string BotLevel {
            get {
                return ResourceManager.GetString("BotLevel", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Logged off of Steam: {0}.
        /// </summary>
        public static string BotLoggedOff {
            get {
                return ResourceManager.GetString("BotLoggedOff", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Successfully logged on as {0}..
        /// </summary>
        public static string BotLoggedOn {
            get {
                return ResourceManager.GetString("BotLoggedOn", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Logging in....
        /// </summary>
        public static string BotLoggingIn {
            get {
                return ResourceManager.GetString("BotLoggingIn", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu This account seems to be used in another ASF instance, which is undefined behaviour, refusing to keep it running!.
        /// </summary>
        public static string BotLogonSessionReplaced {
            get {
                return ResourceManager.GetString("BotLogonSessionReplaced", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Trade offer failed!.
        /// </summary>
        public static string BotLootingFailed {
            get {
                return ResourceManager.GetString("BotLootingFailed", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Trade couldn&apos;t be sent because there is no user with master permission defined!.
        /// </summary>
        public static string BotLootingMasterNotDefined {
            get {
                return ResourceManager.GetString("BotLootingMasterNotDefined", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Trade offer sent successfully!.
        /// </summary>
        public static string BotLootingSuccess {
            get {
                return ResourceManager.GetString("BotLootingSuccess", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu This bot doesn&apos;t have ASF 2FA enabled! Did you forget to import your authenticator as ASF 2FA?.
        /// </summary>
        public static string BotNoASFAuthenticator {
            get {
                return ResourceManager.GetString("BotNoASFAuthenticator", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu This bot instance is not connected!.
        /// </summary>
        public static string BotNotConnected {
            get {
                return ResourceManager.GetString("BotNotConnected", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Couldn&apos;t find any bot named {0}!.
        /// </summary>
        public static string BotNotFound {
            get {
                return ResourceManager.GetString("BotNotFound", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Not owned yet: {0}.
        /// </summary>
        public static string BotNotOwnedYet {
            get {
                return ResourceManager.GetString("BotNotOwnedYet", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Owned already: {0}.
        /// </summary>
        public static string BotOwnedAlready {
            get {
                return ResourceManager.GetString("BotOwnedAlready", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Owned already: {0} | {1}.
        /// </summary>
        public static string BotOwnedAlreadyWithName {
            get {
                return ResourceManager.GetString("BotOwnedAlreadyWithName", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu {0}/{1} bots already own game {2}..
        /// </summary>
        public static string BotOwnsOverviewPerGame {
            get {
                return ResourceManager.GetString("BotOwnsOverviewPerGame", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Rate limit exceeded, we will retry after {0} of cooldown....
        /// </summary>
        public static string BotRateLimitExceeded {
            get {
                return ResourceManager.GetString("BotRateLimitExceeded", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Reconnecting....
        /// </summary>
        public static string BotReconnecting {
            get {
                return ResourceManager.GetString("BotReconnecting", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Key: {0} | Status: {1}.
        /// </summary>
        public static string BotRedeem {
            get {
                return ResourceManager.GetString("BotRedeem", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Key: {0} | Status: {1} | Items: {2}.
        /// </summary>
        public static string BotRedeemWithItems {
            get {
                return ResourceManager.GetString("BotRedeemWithItems", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Refreshing packages data....
        /// </summary>
        public static string BotRefreshingPackagesData {
            get {
                return ResourceManager.GetString("BotRefreshingPackagesData", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Removed expired login key!.
        /// </summary>
        public static string BotRemovedExpiredLoginKey {
            get {
                return ResourceManager.GetString("BotRemovedExpiredLoginKey", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu You can&apos;t send trade to yourself!.
        /// </summary>
        public static string BotSendingTradeToYourself {
            get {
                return ResourceManager.GetString("BotSendingTradeToYourself", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Current memory usage: {0} MB.
        ///Process uptime: {1}.
        /// </summary>
        public static string BotStats {
            get {
                return ResourceManager.GetString("BotStats", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Bot is connecting to Steam network..
        /// </summary>
        public static string BotStatusConnecting {
            get {
                return ResourceManager.GetString("BotStatusConnecting", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Bot is idling game: {0} ({1}, {2} card drops remaining) from a total of {3} games ({4} cards) left to idle (~{5} remaining)..
        /// </summary>
        public static string BotStatusIdling {
            get {
                return ResourceManager.GetString("BotStatusIdling", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Bot is idling games: {0} from a total of {1} games ({2} cards) left to idle (~{3} remaining)..
        /// </summary>
        public static string BotStatusIdlingList {
            get {
                return ResourceManager.GetString("BotStatusIdlingList", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Bot is limited and can&apos;t drop any cards through idling..
        /// </summary>
        public static string BotStatusLimited {
            get {
                return ResourceManager.GetString("BotStatusLimited", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Bot is locked and can&apos;t drop any cards through idling..
        /// </summary>
        public static string BotStatusLocked {
            get {
                return ResourceManager.GetString("BotStatusLocked", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Bot is not idling anything..
        /// </summary>
        public static string BotStatusNotIdling {
            get {
                return ResourceManager.GetString("BotStatusNotIdling", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Bot is not running..
        /// </summary>
        public static string BotStatusNotRunning {
            get {
                return ResourceManager.GetString("BotStatusNotRunning", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu There are {0}/{1} bots running, with total of {2} games ({3} cards) left to idle..
        /// </summary>
        public static string BotStatusOverview {
            get {
                return ResourceManager.GetString("BotStatusOverview", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Bot is paused or running in manual mode..
        /// </summary>
        public static string BotStatusPaused {
            get {
                return ResourceManager.GetString("BotStatusPaused", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Bot is currently being used..
        /// </summary>
        public static string BotStatusPlayingNotAvailable {
            get {
                return ResourceManager.GetString("BotStatusPlayingNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Could not initialize SteamDirectory: connecting with Steam Network might take much longer than usual!.
        /// </summary>
        public static string BotSteamDirectoryInitializationFailed {
            get {
                return ResourceManager.GetString("BotSteamDirectoryInitializationFailed", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Stopping....
        /// </summary>
        public static string BotStopping {
            get {
                return ResourceManager.GetString("BotStopping", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu The trade offer {0} is determined to be {1} due to {2}..
        /// </summary>
        public static string BotTradeOfferResult {
            get {
                return ResourceManager.GetString("BotTradeOfferResult", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Unable to login to Steam: {0}/{1}.
        /// </summary>
        public static string BotUnableToLogin {
            get {
                return ResourceManager.GetString("BotUnableToLogin", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu {0} V{1}.
        /// </summary>
        public static string BotVersion {
            get {
                return ResourceManager.GetString("BotVersion", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Wallet balance: {0} {1}.
        /// </summary>
        public static string BotWalletBalance {
            get {
                return ResourceManager.GetString("BotWalletBalance", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Checking first badge page....
        /// </summary>
        public static string CheckingFirstBadgePage {
            get {
                return ResourceManager.GetString("CheckingFirstBadgePage", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Checking other badge pages....
        /// </summary>
        public static string CheckingOtherBadgePages {
            get {
                return ResourceManager.GetString("CheckingOtherBadgePages", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Chosen idling algorithm: {0}.
        /// </summary>
        public static string ChosenFarmingAlgorithm {
            get {
                return ResourceManager.GetString("ChosenFarmingAlgorithm", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Clearing Steam discovery queue #{0}....
        /// </summary>
        public static string ClearingDiscoveryQueue {
            get {
                return ResourceManager.GetString("ClearingDiscoveryQueue", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Content:
        ///{0}.
        /// </summary>
        public static string Content {
            get {
                return ResourceManager.GetString("Content", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Done!.
        /// </summary>
        public static string Done {
            get {
                return ResourceManager.GetString("Done", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Done matching Steam items, round #{0}..
        /// </summary>
        public static string DoneActivelyMatchingItems {
            get {
                return ResourceManager.GetString("DoneActivelyMatchingItems", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Done clearing Steam discovery queue #{0}..
        /// </summary>
        public static string DoneClearingDiscoveryQueue {
            get {
                return ResourceManager.GetString("DoneClearingDiscoveryQueue", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Enter command: .
        /// </summary>
        public static string EnterCommand {
            get {
                return ResourceManager.GetString("EnterCommand", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Aborted!.
        /// </summary>
        public static string ErrorAborted {
            get {
                return ResourceManager.GetString("ErrorAborted", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Access denied!.
        /// </summary>
        public static string ErrorAccessDenied {
            get {
                return ResourceManager.GetString("ErrorAccessDenied", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Your bot config is invalid. Please verify content of {0} and try again!.
        /// </summary>
        public static string ErrorBotConfigInvalid {
            get {
                return ResourceManager.GetString("ErrorBotConfigInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Configured {0} property is invalid: {1}.
        /// </summary>
        public static string ErrorConfigPropertyInvalid {
            get {
                return ResourceManager.GetString("ErrorConfigPropertyInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Persistent database could not be loaded, if issue persists, please remove {0} in order to recreate the database!.
        /// </summary>
        public static string ErrorDatabaseInvalid {
            get {
                return ResourceManager.GetString("ErrorDatabaseInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu ASF V{0} has run into fatal exception before core logging module was even able to initialize!.
        /// </summary>
        public static string ErrorEarlyFatalExceptionInfo {
            get {
                return ResourceManager.GetString("ErrorEarlyFatalExceptionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Exception: {0}() {1}
        ///StackTrace:
        ///{2}.
        /// </summary>
        public static string ErrorEarlyFatalExceptionPrint {
            get {
                return ResourceManager.GetString("ErrorEarlyFatalExceptionPrint", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Exiting with nonzero error code!.
        /// </summary>
        public static string ErrorExitingWithNonZeroErrorCode {
            get {
                return ResourceManager.GetString("ErrorExitingWithNonZeroErrorCode", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Request failing: {0}.
        /// </summary>
        public static string ErrorFailingRequest {
            get {
                return ResourceManager.GetString("ErrorFailingRequest", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu This function is available only in headless mode!.
        /// </summary>
        public static string ErrorFunctionOnlyInHeadlessMode {
            get {
                return ResourceManager.GetString("ErrorFunctionOnlyInHeadlessMode", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Global config could not be loaded. Make sure that {0} exists and is valid! Follow &apos;setting up&apos; guide on the wiki if you&apos;re confused..
        /// </summary>
        public static string ErrorGlobalConfigNotLoaded {
            get {
                return ResourceManager.GetString("ErrorGlobalConfigNotLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Global config file has been removed!.
        /// </summary>
        public static string ErrorGlobalConfigRemoved {
            get {
                return ResourceManager.GetString("ErrorGlobalConfigRemoved", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Your provided CurrentCulture is invalid, ASF will keep running with the default one!.
        /// </summary>
        public static string ErrorInvalidCurrentCulture {
            get {
                return ResourceManager.GetString("ErrorInvalidCurrentCulture", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu {0} is empty!.
        /// </summary>
        public static string ErrorIsEmpty {
            get {
                return ResourceManager.GetString("ErrorIsEmpty", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu {0} is invalid!.
        /// </summary>
        public static string ErrorIsInvalid {
            get {
                return ResourceManager.GetString("ErrorIsInvalid", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu No bots are defined. Did you forget to configure your ASF?.
        /// </summary>
        public static string ErrorNoBotsDefined {
            get {
                return ResourceManager.GetString("ErrorNoBotsDefined", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu {0} is null!.
        /// </summary>
        public static string ErrorObjectIsNull {
            get {
                return ResourceManager.GetString("ErrorObjectIsNull", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Parsing {0} failed!.
        /// </summary>
        public static string ErrorParsingObject {
            get {
                return ResourceManager.GetString("ErrorParsingObject", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Request failed after {0} attempts!.
        /// </summary>
        public static string ErrorRequestFailedTooManyTimes {
            get {
                return ResourceManager.GetString("ErrorRequestFailedTooManyTimes", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu ASF process is already running for this working directory, aborting!.
        /// </summary>
        public static string ErrorSingleInstanceRequired {
            get {
                return ResourceManager.GetString("ErrorSingleInstanceRequired", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Could not check latest version!.
        /// </summary>
        public static string ErrorUpdateCheckFailed {
            get {
                return ResourceManager.GetString("ErrorUpdateCheckFailed", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Could not proceed with update because there is no asset that relates to currently running version! Automatic update to that version is not possible..
        /// </summary>
        public static string ErrorUpdateNoAssetForThisVersion {
            get {
                return ResourceManager.GetString("ErrorUpdateNoAssetForThisVersion", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Could not proceed with an update because that version doesn&apos;t include any assets!.
        /// </summary>
        public static string ErrorUpdateNoAssets {
            get {
                return ResourceManager.GetString("ErrorUpdateNoAssets", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Received a request for user input, but process is running in headless mode!.
        /// </summary>
        public static string ErrorUserInputRunningInHeadlessMode {
            get {
                return ResourceManager.GetString("ErrorUserInputRunningInHeadlessMode", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Executing....
        /// </summary>
        public static string Executing {
            get {
                return ResourceManager.GetString("Executing", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Exiting....
        /// </summary>
        public static string Exiting {
            get {
                return ResourceManager.GetString("Exiting", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu We have a total of {0} games ({1} cards) left to idle (~{2} remaining)....
        /// </summary>
        public static string GamesToIdle {
            get {
                return ResourceManager.GetString("GamesToIdle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Global config file has been changed!.
        /// </summary>
        public static string GlobalConfigChanged {
            get {
                return ResourceManager.GetString("GlobalConfigChanged", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Idling finished!.
        /// </summary>
        public static string IdlingFinished {
            get {
                return ResourceManager.GetString("IdlingFinished", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Finished idling: {0} ({1}) after {2} of playtime!.
        /// </summary>
        public static string IdlingFinishedForGame {
            get {
                return ResourceManager.GetString("IdlingFinishedForGame", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Finished idling games: {0}.
        /// </summary>
        public static string IdlingFinishedForGames {
            get {
                return ResourceManager.GetString("IdlingFinishedForGames", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Idling {0} ({1}) is temporarily disabled, as ASF is not able to play that game at the moment..
        /// </summary>
        public static string IdlingGameNotPossible {
            get {
                return ResourceManager.GetString("IdlingGameNotPossible", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Idling status for {0} ({1}): {2} cards remaining.
        /// </summary>
        public static string IdlingStatusForGame {
            get {
                return ResourceManager.GetString("IdlingStatusForGame", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Idling stopped!.
        /// </summary>
        public static string IdlingStopped {
            get {
                return ResourceManager.GetString("IdlingStopped", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Ignoring this request, as permanent pause is enabled!.
        /// </summary>
        public static string IgnoredPermanentPauseEnabled {
            get {
                return ResourceManager.GetString("IgnoredPermanentPauseEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Ignoring trade: {0}.
        /// </summary>
        public static string IgnoringTrade {
            get {
                return ResourceManager.GetString("IgnoringTrade", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Initializing {0}....
        /// </summary>
        public static string Initializing {
            get {
                return ResourceManager.GetString("Initializing", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Interactive console is now active, type &apos;c&apos; in order to enter command mode..
        /// </summary>
        public static string InteractiveConsoleEnabled {
            get {
                return ResourceManager.GetString("InteractiveConsoleEnabled", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Interactive console is not available due to missing {0} config property..
        /// </summary>
        public static string InteractiveConsoleNotAvailable {
            get {
                return ResourceManager.GetString("InteractiveConsoleNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu IPC config has been changed!.
        /// </summary>
        public static string IPCConfigChanged {
            get {
                return ResourceManager.GetString("IPCConfigChanged", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu IPC server ready!.
        /// </summary>
        public static string IPCReady {
            get {
                return ResourceManager.GetString("IPCReady", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Starting IPC server....
        /// </summary>
        public static string IPCStarting {
            get {
                return ResourceManager.GetString("IPCStarting", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Logging in to {0}....
        /// </summary>
        public static string LoggingIn {
            get {
                return ResourceManager.GetString("LoggingIn", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu No bots are running, exiting....
        /// </summary>
        public static string NoBotsAreRunning {
            get {
                return ResourceManager.GetString("NoBotsAreRunning", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Nothing found!.
        /// </summary>
        public static string NothingFound {
            get {
                return ResourceManager.GetString("NothingFound", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu We don&apos;t have anything to idle on this account!.
        /// </summary>
        public static string NothingToIdle {
            get {
                return ResourceManager.GetString("NothingToIdle", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Now idling: {0} ({1}).
        /// </summary>
        public static string NowIdling {
            get {
                return ResourceManager.GetString("NowIdling", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Now idling: {0}.
        /// </summary>
        public static string NowIdlingList {
            get {
                return ResourceManager.GetString("NowIdlingList", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Playing is currently unavailable, we&apos;ll try again later!.
        /// </summary>
        public static string PlayingNotAvailable {
            get {
                return ResourceManager.GetString("PlayingNotAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Please wait....
        /// </summary>
        public static string PleaseWait {
            get {
                return ResourceManager.GetString("PleaseWait", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu {0} has been loaded successfully!.
        /// </summary>
        public static string PluginLoaded {
            get {
                return ResourceManager.GetString("PluginLoaded", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Loading {0} V{1}....
        /// </summary>
        public static string PluginLoading {
            get {
                return ResourceManager.GetString("PluginLoading", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu You&apos;ve loaded one or more of custom plugins into the ASF. Since we&apos;re unable to offer a support for modded setups, please reach the appropriate developers of the plugins that you decided to use in case of any issues..
        /// </summary>
        public static string PluginsWarning {
            get {
                return ResourceManager.GetString("PluginsWarning", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Refreshing our session!.
        /// </summary>
        public static string RefreshingOurSession {
            get {
                return ResourceManager.GetString("RefreshingOurSession", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Rejecting trade: {0}.
        /// </summary>
        public static string RejectingTrade {
            get {
                return ResourceManager.GetString("RejectingTrade", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Response: {0}.
        /// </summary>
        public static string Response {
            get {
                return ResourceManager.GetString("Response", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Restarting....
        /// </summary>
        public static string Restarting {
            get {
                return ResourceManager.GetString("Restarting", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Result: {0}.
        /// </summary>
        public static string Result {
            get {
                return ResourceManager.GetString("Result", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Starting....
        /// </summary>
        public static string Starting {
            get {
                return ResourceManager.GetString("Starting", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Still idling: {0} ({1}).
        /// </summary>
        public static string StillIdling {
            get {
                return ResourceManager.GetString("StillIdling", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Still idling: {0}.
        /// </summary>
        public static string StillIdlingList {
            get {
                return ResourceManager.GetString("StillIdlingList", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Stopped idling: {0} ({1}).
        /// </summary>
        public static string StoppedIdling {
            get {
                return ResourceManager.GetString("StoppedIdling", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Stopped idling: {0}.
        /// </summary>
        public static string StoppedIdlingList {
            get {
                return ResourceManager.GetString("StoppedIdlingList", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Success!.
        /// </summary>
        public static string Success {
            get {
                return ResourceManager.GetString("Success", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Target bot instance is not connected!.
        /// </summary>
        public static string TargetBotNotConnected {
            get {
                return ResourceManager.GetString("TargetBotNotConnected", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu ASF will attempt to use your preferred {0} culture, but translation in that language was completed only in {1}. Perhaps you could help us improve ASF translation for your language?.
        /// </summary>
        public static string TranslationIncomplete {
            get {
                return ResourceManager.GetString("TranslationIncomplete", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Unknown command!.
        /// </summary>
        public static string UnknownCommand {
            get {
                return ResourceManager.GetString("UnknownCommand", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Unlocking parental account....
        /// </summary>
        public static string UnlockingParentalAccount {
            get {
                return ResourceManager.GetString("UnlockingParentalAccount", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Unused keys: {0}.
        /// </summary>
        public static string UnusedKeys {
            get {
                return ResourceManager.GetString("UnusedKeys", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Checking for new version....
        /// </summary>
        public static string UpdateCheckingNewVersion {
            get {
                return ResourceManager.GetString("UpdateCheckingNewVersion", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Cleaning up old files after update....
        /// </summary>
        public static string UpdateCleanup {
            get {
                return ResourceManager.GetString("UpdateCleanup", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Downloading new version: {0} ({1} MB)... While waiting, consider donating if you appreciate the work being done! :).
        /// </summary>
        public static string UpdateDownloadingNewVersion {
            get {
                return ResourceManager.GetString("UpdateDownloadingNewVersion", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Update process finished!.
        /// </summary>
        public static string UpdateFinished {
            get {
                return ResourceManager.GetString("UpdateFinished", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu New ASF version is available! Consider updating yourself!.
        /// </summary>
        public static string UpdateNewVersionAvailable {
            get {
                return ResourceManager.GetString("UpdateNewVersionAvailable", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Local version: {0} | Remote version: {1}.
        /// </summary>
        public static string UpdateVersionInfo {
            get {
                return ResourceManager.GetString("UpdateVersionInfo", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Please enter your 2FA code from your Steam authenticator app: .
        /// </summary>
        public static string UserInputSteam2FA {
            get {
                return ResourceManager.GetString("UserInputSteam2FA", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Please enter SteamGuard auth code that was sent on your e-mail: .
        /// </summary>
        public static string UserInputSteamGuard {
            get {
                return ResourceManager.GetString("UserInputSteamGuard", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Please enter your Steam login: .
        /// </summary>
        public static string UserInputSteamLogin {
            get {
                return ResourceManager.GetString("UserInputSteamLogin", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Please enter Steam parental code: .
        /// </summary>
        public static string UserInputSteamParentalCode {
            get {
                return ResourceManager.GetString("UserInputSteamParentalCode", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Please enter your Steam password: .
        /// </summary>
        public static string UserInputSteamPassword {
            get {
                return ResourceManager.GetString("UserInputSteamPassword", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Could not get badges&apos; information, we will try again later!.
        /// </summary>
        public static string WarningCouldNotCheckBadges {
            get {
                return ResourceManager.GetString("WarningCouldNotCheckBadges", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Could not check cards status for: {0} ({1}), we will try again later!.
        /// </summary>
        public static string WarningCouldNotCheckCardsStatus {
            get {
                return ResourceManager.GetString("WarningCouldNotCheckCardsStatus", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Usage of {0} is deprecated and will be removed in future versions of the program. Please use {1} instead..
        /// </summary>
        public static string WarningDeprecated {
            get {
                return ResourceManager.GetString("WarningDeprecated", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu You&apos;re running more personal bot accounts than our upper recommended limit ({0}). Be advised that this setup is not supported and might cause various Steam-related issues, including account suspensions. Check out the FAQ for more details..
        /// </summary>
        public static string WarningExcessiveBotsCount {
            get {
                return ResourceManager.GetString("WarningExcessiveBotsCount", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Failed!.
        /// </summary>
        public static string WarningFailed {
            get {
                return ResourceManager.GetString("WarningFailed", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Failed due to error: {0}.
        /// </summary>
        public static string WarningFailedWithError {
            get {
                return ResourceManager.GetString("WarningFailedWithError", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu ASF detected ID mismatch for {0} ({1}) and will use ID of {2} instead..
        /// </summary>
        public static string WarningIdlingGameMismatch {
            get {
                return ResourceManager.GetString("WarningIdlingGameMismatch", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu You&apos;re using a version that is newer than latest released version for your update channel. Please note that pre-release versions are dedicated to users who know how to report bugs, deal with issues and give feedback - no technical support will be given..
        /// </summary>
        public static string WarningPreReleaseVersion {
            get {
                return ResourceManager.GetString("WarningPreReleaseVersion", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Please review our privacy policy section on the wiki if you&apos;re concerned about what ASF is in fact doing!.
        /// </summary>
        public static string WarningPrivacyPolicy {
            get {
                return ResourceManager.GetString("WarningPrivacyPolicy", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Received unknown value for {0}, please report this: {1}.
        /// </summary>
        public static string WarningUnknownValuePleaseReport {
            get {
                return ResourceManager.GetString("WarningUnknownValuePleaseReport", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu Workaround for {0} bug has been triggered..
        /// </summary>
        public static string WarningWorkaroundTriggered {
            get {
                return ResourceManager.GetString("WarningWorkaroundTriggered", resourceCulture);
            }
        }
        
        /// <summary>
        /// Wyszukuje zlokalizowany ciąg podobny do ciągu It looks like it&apos;s your first launch of the program, welcome!.
        /// </summary>
        public static string Welcome {
            get {
                return ResourceManager.GetString("Welcome", resourceCulture);
            }
        }
    }
}
